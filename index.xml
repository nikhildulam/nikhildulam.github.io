<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nikhil's Blog</title><link>https://nikhildulam.github.io/</link><description>Recent content on Nikhil's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 08 Jun 2020 08:06:25 +0600</lastBuildDate><atom:link href="https://nikhildulam.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About Life and Death</title><link>https://nikhildulam.github.io/posts/markdown-sample/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://nikhildulam.github.io/posts/markdown-sample/</guid><description>About Life and Death Life asked Death, &amp;ldquo;Why do people love me and Hate you?&amp;rdquo; Death replied&amp;quot; Because you are a beautiful lie and I&amp;rsquo;m a painful truth&amp;quot; The tragedy of life is not death but what we let die inside us while we live
Death and life, success and failure, pain and pleasure, wealth and poverty, all these happen to good and bad alike, and they are neither noble nor shameful and hence neither good nor bad.</description></item><item><title>Introduction</title><link>https://nikhildulam.github.io/posts/introduction/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://nikhildulam.github.io/posts/introduction/</guid><description>Greeting! This is an introduction post. This post tests the followings:
Hero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file.</description></item><item><title>Rich Content</title><link>https://nikhildulam.github.io/posts/category/sub-category/rich-content/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://nikhildulam.github.io/posts/category/sub-category/rich-content/</guid><description>This sample post tests the followings:
Category, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you&amp;#39;ll lose this staring contest ü¶â pic.twitter.com/eJh4f2zncC
&amp;mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample</description></item><item><title>Shortcodes Samples</title><link>https://nikhildulam.github.io/posts/shortcodes/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://nikhildulam.github.io/posts/shortcodes/</guid><description>This is a sample post intended to test the followings:
Default hero image. Different shortcodes. Alert The following alerts are available in this theme.
This is sample alert with type=&amp;quot;success&amp;quot;. This is sample alert with type=&amp;quot;danger&amp;quot;. This is sample alert with type=&amp;quot;warning&amp;quot;. This is sample alert with type=&amp;quot;info&amp;quot;. This is sample alert with type=&amp;quot;dark&amp;quot;. This is sample alert with type=&amp;quot;primary&amp;quot;. This is sample alert with type=&amp;quot;secondary&amp;quot;. Image A sample image without any attribute.</description></item><item><title>Go ‡¶™‡¶∞‡¶ø‡¶ö‡¶ø‡¶§‡¶ø</title><link>https://nikhildulam.github.io/notes/go/basic/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/basic/introduction/</guid><description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618</description></item><item><title>Go ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï</title><link>https://nikhildulam.github.io/notes/go/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/basic/</guid><description/></item><item><title>‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶≠‡¶æ‡¶®‡ßç‡¶∏‡¶°</title><link>https://nikhildulam.github.io/notes/go/advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/advanced/</guid><description/></item><item><title>‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ü‡¶æ‡¶á‡¶™ ‡¶∏‡¶Æ‡ßÇ‡¶π</title><link>https://nikhildulam.github.io/notes/go/basic/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/basic/types/</guid><description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description></item><item><title>Flow Control</title><link>https://nikhildulam.github.io/notes/go/basic/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/basic/flow-control/</guid><description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description></item><item><title>‡¶´‡¶æ‡¶á‡¶≤ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶™‡ßÅ‡¶≤‡ßá‡¶∂‡¶®</title><link>https://nikhildulam.github.io/notes/go/advanced/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/advanced/files/</guid><description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)</description></item><item><title>‡¶¨‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤</title><link>https://nikhildulam.github.io/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/bash/basic/</guid><description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi</description></item><item><title>Go ‡¶è‡¶∞ ‡¶®‡ßã‡¶ü ‡¶∏‡¶Æ‡ßÇ‡¶π</title><link>https://nikhildulam.github.io/notes/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/go/</guid><description>Go Notes</description></item><item><title>‡¶¨‡ßç‡¶Ø‡¶æ‡¶∂‡ßá‡¶∞ ‡¶®‡ßã‡¶ü ‡¶∏‡¶Æ‡ßÇ‡¶π</title><link>https://nikhildulam.github.io/notes/bash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nikhildulam.github.io/notes/bash/</guid><description>Bash Notes</description></item></channel></rss>